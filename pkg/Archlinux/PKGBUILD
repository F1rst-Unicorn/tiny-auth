# Maintainer: Jan Veen <jan.veen Ã¦t posteo.de>
pkgname=tiny-auth
pkgver=1.0.1
pkgrel=2
pkgdesc="OIDC Provider"
arch=('x86_64')
url="https://j.njsm.de/git/veenj/${pkgname}"
license=('GPL3')
depends=('gcc-libs' 'systemd' 'openssl')
makedepends=('rust' 'gcc' 'pkgconf' 'npm')
backup=("etc/${pkgname}/config.yml"
        "etc/${pkgname}/store/clients/tiny-auth-frontend.yml"
        "etc/${pkgname}/store/scopes/address.yml"
        "etc/${pkgname}/store/scopes/email.yml"
        "etc/${pkgname}/store/scopes/openid.yml"
        "etc/${pkgname}/store/scopes/phone.yml"
        "etc/${pkgname}/store/scopes/profile.yml")

build() {
    cd "$srcdir"
    chmod u+rw . -R

    cd "$srcdir/src/rust"
    cargo build --release

    cd "$srcdir/src/typescript"
    npm install
    mkdir -p src/generated
    npx protoc \
            --ts_out src/generated \
            --ts_opt long_type_string,generate_dependencies,optimize_code_size \
            --proto_path ../proto \
            ../proto/tiny-auth/tiny-auth.proto
    npm run build
}

check() {
    cd "$srcdir/src/rust"
    cargo fmt --all -- --check
    cargo clippy --release -j 8 -- -D clippy::all
    cargo test -j 1

    cd "$srcdir/src/typescript"
    npx prettier . --write
    npm run lint
    npm audit
}

package() {
    cd "$srcdir"

    cd src/rust
    install -D -m 755 target/release/${pkgname} $pkgdir/usr/bin/${pkgname}
    install -D -m 755 target/release/${pkgname}-password-encoder $pkgdir/usr/bin/${pkgname}-password-encoder
    install -D -m 755 target/release/${pkgname}-scope-debugger $pkgdir/usr/bin/${pkgname}-scope-debugger

    cd ../..
    install -D -m 644 pkg/config.yml $pkgdir/etc/${pkgname}/config.yml
    install -D -m 644 pkg/systemd.service $pkgdir/usr/lib/systemd/system/${pkgname}.service
    install -D -m 644 pkg/systemd.sysusers $pkgdir/usr/lib/sysusers.d/${pkgname}.conf
    install -D -m 644 pkg/systemd.tmpfiles $pkgdir/usr/lib/tmpfiles.d/${pkgname}.conf

    mkdir -p $pkgdir/usr/share/${pkgname}/static
    cp -r src/static/css $pkgdir/usr/share/${pkgname}/static
    cp -r src/static/img $pkgdir/usr/share/${pkgname}/static
    cp -r src/typescript/dist/assets $pkgdir/usr/share/${pkgname}/static
    cp -r src/static/templates $pkgdir/usr/share/${pkgname}/static
    rm $pkgdir/usr/share/${pkgname}/static/templates/index.html.j2
    cp -r src/typescript/dist/index.html $pkgdir/usr/share/${pkgname}/static/templates/index.html.j2

    mkdir -p $pkgdir/etc/${pkgname}/store/{users,clients,scopes}
    cp -r pkg/scopes/* $pkgdir/etc/${pkgname}/store/scopes
    cp -r pkg/clients/* $pkgdir/etc/${pkgname}/store/clients

    mkdir -p $pkgdir/usr/share/doc/${pkgname}
    cp -r doc/* $pkgdir/usr/share/doc/${pkgname}
    cp -r pkg/examples $pkgdir/usr/share/doc/${pkgname}
}
