@startuml

package client {
    class Resource
    class Action
    class AtomicAction
    class CompositeAction

    class Permission
    class AuthorizationConstraint
}

package tiny-auth {
    class Role
    class Subject
    class Group
    class User

    class Client
}

User --|> Subject
Group --|> Subject
Subject --o Group: User Hierarchy

Role --o Role: Role Hierarchy

Subject -- Role
Role -- Client: visible to
Role "1.." -- Permission: grants

Permission -- "1.." Action: to perform
Permission -- "0..1"  AuthorizationConstraint

AtomicAction --|> Action
CompositeAction --|> Action
Action --o CompositeAction: Action Hierarchy

Action --* "1" Resource: on

package data {
    class Scope <<Resource>>
    class User <<Resource>>
    class Client <<Resource>>
    class Group <<Resource>>

    class "Read" as ReadUser <<Action>>
    class "Read" as ReadClient <<Action>>
    class "Read" as ReadScope <<Action>>

    ReadUser -- data.User: on
    ReadClient -- data.Client: on
    ReadScope -- data.Scope: on

}

package debugScope {
    class DebugScope <<Action>>

    class DebugOwnUserScope <<Permission>>
    class OwnUser <<AuthorizationConstraint>> {
        currentUser = resource.user
    }
    class DebugAllUserScopes <<Permission>>

    class NormalUser <<Role>>
    class AdminUser <<Role>>

    DebugScope --o ReadUser
    DebugScope --o ReadClient
    DebugScope --o ReadScope

    DebugAllUserScopes -- DebugScope: to perform
    DebugOwnUserScope -- OwnUser
    DebugOwnUserScope -- DebugScope: to perform

    NormalUser -- DebugOwnUserScope: grants
    AdminUser -- DebugAllUserScopes: grants

}

@enduml