experimental = ["setup-scripts"]

[profile.default]
fail-fast = false

[profile.default.junit]
path = "junit.xml"
store-success-output = true
store-failure-output = true

[test-groups]
sqlite-db = { max-threads = 1 }
docker = { max-threads = 3 }

[script.sqlite-liquibase-setup]
command = """bash -c 'rm -rf ../sql/sqlite/build/unittests* ;
    ../sql/gradlew -p ../sql :sqlite:update -PdbName=unittests -PliquibaseLabels=unittests'
"""
capture-stdout = true
capture-stderr = true

[script.env]
command = 'bash .config/test-env.sh'

[[profile.default.overrides]]
filter = "package(tiny_auth_sqlite)"
test-group = 'sqlite-db'

[[profile.default.scripts]]
filter = "package(tiny_auth_sqlite)"
setup = 'sqlite-liquibase-setup'

[[profile.default.scripts]]
filter = 'all()'
setup = 'env'

[[profile.default.overrides]]
filter = """package(tiny_auth_ldap)
    & (
        test(test::successful_simple_bind_authentication_works)
        | test(test::failing_authentication_works_with_search_bind_anonymous)
        | test(test::failing_authentication_works_with_search_bind)
        | test(test::successful_search_bind_anonymous_authentication_works)
        | test(test::failing_authentication_works_with_simple_bind)
        | test(test::successful_search_bind_authentication_works)
        | test(test::getting_user_works)
        | test(test::getting_client_works)
    )
"""
test-group = 'docker'